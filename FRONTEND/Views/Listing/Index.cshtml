@using System
@model FreeListingViewModel
@inject ICategory categoryRepository
@inject IAddresses addressRepository
@inject IListingManager listingRepository
@inject IUserProfileRepo userProfileRepository
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostingEnv
@inject INotification notification
@inject IClaimListing ClaimListing 

@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/Frontend/_ListingDetails.cshtml";
}

<!-- Begin: Analytics -->
@{
    @await Component.InvokeAsync("ListingViewCountIncrement", Model.Listing.ListingID);
    @await Component.InvokeAsync("ListingViewAsync", Model.Listing.ListingID);
}
<!-- End: -->

@{
    // Begin: Category
    var firstCategory = await categoryRepository.FirstCategoryDetailsAsync(Model.Categories.FirstCategoryID);
    var secondCategory = await categoryRepository.SecondCategoryDetailsAsync(Model.Categories.SecondCategoryID);
    // End:
    // Begin: Address
    var country = await addressRepository.CountryDetailsAsync(Model.Address.CountryID);
    var state = await addressRepository.StateDetailsAsync(Model.Address.StateID);
    var city = await addressRepository.CityDetailsAsync(Model.Address.City);
    var assembly = await addressRepository.StationDetailsAsync(Model.Address.AssemblyID);
    var pincode = await addressRepository.PincodeDetailsAsync(Model.Address.PincodeID);
    var locality = await addressRepository.LocalityDetailsAsync(Model.Address.LocalityID);
    // End:
    // Begin: Get Rating
    var rating = await listingRepository.GetRatingAsync(Model.Listing.ListingID);
    var ratingCount = rating.Count();
    // End:

    var listingAlreadyClaim = await ClaimListing.CheckIfListingAlreadyClaimed(Model.Listing.ListingID);
}

<!-- Begin: Map CSS -->
<style>
    .mapouter {
        position: relative;
        text-align: right;
        height: 300px;
        width: 100%;
    }

    .gmap_canvas {
        overflow: hidden;
        background: none !important;
        height: 300px;
        width: 100%;
    }
</style>
<!-- End: -->
<!-- Begin: Contact Details -->
<style>
    #contactDetails a {
        color: #484848;
    }

        #contactDetails a:hover {
            color: #000000;
        }
</style>
<!-- End: -->

@section Scripts{

    <!-- Shafi: SignalR -->
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    @*<script src="~/Hubs-Signalr/ClientDashboard/NotificationUserDashboard.js"></script>*@
    <!-- End: -->

    <script type="text/javascript">
        $(document).ready(function () {
            $("#contactDetails").hide();
            $("#HideNumber").hide();
            $("#FulltWorkingHours").hide();
            $("#ShortWorkingHoursHide").hide();
            /* Begin: Write Review */
            $("#Review").hide();
            $("#HideWriteReview").hide();
            $("#ReviewSuccessMessage").hide();
            /*End: */
            /* Begin: Edit Review */
            $("#EditReview").hide();
            $("#EditReviewSuccessMessage").hide();
            $("#EditReviewButtonTwo").hide();
            /*End: */

        });

        $("#ViewNumber").click(function () {
            $("#contactDetails").show();
            $("#ViewNumber").hide();
            $("#HideNumber").show();
        });

        $("#HideNumber").click(function () {
            $("#contactDetails").hide();
            $("#ViewNumber").show();
            $("#HideNumber").hide();
        });

        $("#ShortWorkingHoursShow").click(function () {
            $("#FulltWorkingHours").show();
            $("#ShortWorkingHoursHide").show();
            $("#ShortWorkingHoursShow").hide();
        });

        $("#ShortWorkingHoursHide").click(function () {
            $("#FulltWorkingHours").hide();
            $("#ShortWorkingHoursHide").hide();
            $("#ShortWorkingHoursShow").show();
        });

        /* Begin: Write Review */
        $("#WriteReview").click(function () {
            $("#Review").show();
            $("#WriteReview").hide();
            $("#HideWriteReview").show();
        });

        $("#HideWriteReview").click(function () {
            $("#HideWriteReview").hide();
            $("#Review").hide();
            $("#WriteReview").show();
        });
        /* End: */

        /* Begin: Edit Review */
        $("#EditReviewButton").click(function () {
            $("#EditReview").show();
            $("#EditReviewButton").hide();
            $("#EditReviewSuccessMessage").hide()
        });

        $("#EditReviewButtonTwo").click(function () {
            $("#EditReview").show();
        });

        $("#CloseEditReview").click(function () {
            $("#EditReview").hide();
            $("#EditReviewButton").show();
        });

        $("#EditReviewSave").click(function () {
            $("#EditReview").hide();
            $("#EditReviewButton").show();
            $("#EditReviewSuccessMessage").show().html("Congratulation! Its working.");
        });
        /* End: */

        // Begin: Disable Cut Copy Paste for Review Textarea
        $("[name='Comment']").bind("copy paste", function (e) {
            e.preventDefault();
        });
        // End:
    </script>

    @if ((User.Identity.IsAuthenticated == true && ViewBag.UserGuid != Model.Listing.OwnerGuid))
    {
        <script type="text/javascript">
            $(document).ready(function () {
                //Disable cut copy paste
                $('body').bind('cut copy paste', function (e) {
                    e.preventDefault();
                });

                //Disable mouse right click
                $("body").on("contextmenu", function (e) {
                    alert("You can only copy content of your own listing.");
                    return false;
                });
            })
        </script>
    }

    @if (User.Identity.IsAuthenticated == false)
    {
        // Begin: Disable cut copy paste and right click in entire website
        <script type="text/javascript">
            $(document).ready(function () {
                //Disable cut copy paste
                $('body').bind('cut copy paste', function (e) {
                    e.preventDefault();
                });

                //Disable mouse right click
                $("body").on("contextmenu", function (e) {
                    alert("Please login to copy content.");
                    return false;
                });
            });
        </script>
        // End:

        <script type="text/javascript">
            $(document).ready(function () {
                $("#LikeMe").click(function () {
                    alert("Please login to like.");
                });

                $("#BookmarkMe").click(function () {
                    alert("Please login to bookmark.");
                });

                $("#SubscribeMe").click(function () {
                    alert("Please login to subscribe.");
                });

                $("#SubmitReview").click(function () {
                    alert("Please login to post review.");
                })
            });
        </script>
    }


    <!-- Begin: Get all ratings for this listing through partial view and update via ajax -->
    <script type="text/javascript">
        $(document).ready(function () {
            var ListingID = @Model.Listing.ListingID;
            $.ajax({
                url: '@Url.Action("ReviewsPartialView", "Listing")',
                type: 'POST',
                async: true,
                dataType: 'html',
                data: {
                    ListingID: ListingID
                },
                success: function (data) {
                    $("#GetReviewsAndRatings").html(data);
                }
            });

            $.ajax({
                url: '@Url.Action("ReviewByUserOnTopViewComponent", "Listing")',
                type: 'POST',
                async: true,
                dataType: 'html',
                data: {
                    ListingID: ListingID
                },
                success: function (data) {
                    $("#ReviewByUserOnTop").html(data);
                }
            });

            $.ajax({
                url: '@Url.Action("RatingBarsViewComponent", "Listing")',
                type: 'POST',
                async: true,
                dataType: 'html',
                data: {
                    ListingID: ListingID
                },
                success: function (data) {
                    $("#RatingBar").html(data);
                }
            });
        });
    </script>

    <!-- Begin: Run code if user is authenticated -->
    @if (User.Identity.IsAuthenticated)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                // Shafi: SignalR Starts Here...
                // Shafi: Create connection
                var connection = new signalR.HubConnectionBuilder().withUrl("/notificationUserDashboardHub").build();
                // End:

                // Shafi: When connection is on executive this
                connection.on("Notify", function (UserID, ConnectionID, Name) {
                    $("#btnRegisteredUser").click(function () {
                        var message = "User ID: " + UserID + " Connection ID: " + ConnectionID + " Name: " + Name;
                        alert(message);
                    });
                });
                // End:

                // Shafi: Start connection
                connection.start().then(function () {
                }).catch(function (err) {
                    console.log(err.toString());
                });
                // End:

                // Shafi: Invoke connection
                $(document).ready(function () {
                    connection.invoke("OnConnectedAsync").catch(function (err) {
                        console.log(error.toString());
                    });

                    connection.invoke("OnDisconnectedAsync").catch(function (err) {
                        console.log(error.toString());
                    });
                });
                // End: SignalR Ends Here...


                // Shafi: Create Review & Rating
                $("#SubmitReview").click(function () {
                    var Ratings = $("[name='Ratings']:checked").val();
                    var Comment = $("[name='Comment']").val();
                    var ListingID = $("#ListingIdValue").val();
                    /* Begin: Create rating and then show success message and hide review form */
                    $.ajax({
                        url: '/Listing/Rating',
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            Ratings: Ratings,
                            Comment: Comment,
                            ListingID: ListingID
                        },
                        success: function (data) {
                            $("#ReviewSuccessMessage").html(data);
                            $("#ReviewSuccessMessage").show();
                            $("#Review").hide();
                            $("#EditReviewButtonTwo").show();

                            /* Begin: Show all reviews for this listing including latest posted review */
                            $.ajax({
                                url: '@Url.Action("ReviewsPartialView", "Listing")',
                                type: 'POST',
                                dataType: 'html',
                                data: {
                                    ListingID: ListingID
                                },
                                success: function (data) {
                                    $("#GetReviewsAndRatings").empty();
                                    $("#GetReviewsAndRatings").html(data);
                                }
                            });
                            /* End: */

                            /* Begin: Update Review By User by Invoking View Component */
                            $.ajax({
                                url: '@Url.Action("ReviewByUserOnTopViewComponent", "Listing")',
                                type: 'POST',
                                async: true,
                                dataType: 'html',
                                data: {
                                    ListingID: ListingID
                                },
                                success: function (data) {
                                    $("#ReviewByUserOnTop").animate({ borderWidth: "5px" });
                                    $("#ReviewByUserOnTop").html(data);
                                }
                            });
                            /* End: */

                            /* Begin: Update Rating Bar By Invoking View Component */
                            $.ajax({
                                url: '@Url.Action("RatingBarsViewComponent", "Listing")',
                                type: 'POST',
                                async: true,
                                dataType: 'html',
                                data: {
                                    ListingID: ListingID
                                },
                                success: function (data) {
                                    $("#RatingBar").html(data);
                                }
                            });
                            /* End: */
                        }
                    });
                    /* End: */
                });
                // End:

                // Shafi: Edit Review
                // Begin: Blink function
                $.fn.Blink = function (interval = 100, iterate = 1) {
                    for (i = 1; i <= iterate; i++)
                        $(this).fadeOut(interval).fadeIn(interval);
                }
                // End:

                $("#EditReviewSave").click(function () {
                    var EditStars = $("[name='EditStars']:checked").val();
                    var EditComment = $("#EditComment").val();
                    var RatingID = $("[name='RatingID']").val();
                    var ListingID = $("#ListingIdValue").val();
                    /* Begin: Create rating and then show success message and hide review form */
                    $.ajax({
                        url: '/Listing/EditRating',
                        async: true,
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            EditStars: EditStars,
                            EditComment: EditComment,
                            RatingID: RatingID
                        },
                        success: function (data) {
                            $("#EditReview").hide().slideUp(2000);
                            $("#EditReviewButton").hide().fadeIn(2000);
                            $("#EditReviewSuccessMessage").hide().html(data).fadeIn(2000);

                            /* Begin: Show all reviews for this listing including latest posted review */
                            $.ajax({
                                url: '@Url.Action("ReviewsPartialView", "Listing")',
                                type: 'POST',
                                dataType: 'html',
                                data: {
                                    ListingID: ListingID
                                },
                                success: function (data) {
                                    $("#GetReviewsAndRatings").empty();
                                    $("#GetReviewsAndRatings").hide().html(data).slideDown(2000);
                                }
                            });
                        /* End: */

                            /* Begin: Update Review By User by Invoking View Component */
                            $.ajax({
                                url: '@Url.Action("ReviewByUserOnTopViewComponent", "Listing")',
                                type: 'POST',
                                async: true,
                                dataType: 'html',
                                data: {
                                    ListingID: ListingID
                                },
                                success: function (data) {
                                    $("#ReviewByUserOnTop").hide().html(data).slideDown(2000);
                                    $("#ReviewByUserOnTop").Blink(1000, 2);
                                }
                            });
                        /* End: */

                            /* Begin: Update Rating Bar By Invoking View Component */
                            $.ajax({
                                url: '@Url.Action("RatingBarsViewComponent", "Listing")',
                                type: 'POST',
                                async: true,
                                dataType: 'html',
                                data: {
                                    ListingID: ListingID
                                },
                                success: function (data) {
                                    $("#RatingBar").hide().html(data).slideDown(2000);
                                }
                            });

                            /* End: */
                        }
                    });
                    /* End: */
                });
                // End: Review


                /* Begin: Manage Like & Dislike */
                $("#LikeMe").click(function () {
                    /* Begin: Get parameters value from hidden input */
                    var ListingIDValue = $("#ListingIdValue").val();
                    var LikeValue = $("#LikeValue").val();

                    /* End: */
                    $.ajax({
                        url: '/Listing/LikeDislike',
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            ListingID: ListingIDValue,
                            Like: LikeValue
                        },
                        success: function (data) {

                            var status = data.substring
                                (
                                    data.lastIndexOf("(") + 1,
                                    data.lastIndexOf(")")
                            );

                            var likeDislikeId = data.split('-')[1];

                            $("#LikeValue").val(status);

                            /* Begin: Set Class Name Document Load */
                            if (status == "Unlike") {
                                $("#LikeMe i").removeClass("icon-thumbs-up").addClass("icon-thumbs-up-alt");
                                $("#LikeMe i").css("color", "#0094ff;");

                                connection.invoke("LikeUnlikeAsync", likeDislikeId, "Liked", ListingIDValue).catch(function (error) {
                                    alert(error.toString());
                                });
                            }
                            if (status == "Like") {
                                $("#LikeMe i").removeClass("icon-thumbs-up-alt").addClass("icon-thumbs-up");

                                connection.invoke("LikeUnlikeAsync", likeDislikeId, "Unliked", ListingIDValue).catch(function (error) {
                                    alert(error.toString());
                                });
                            }
                            /* End: */

                            /* Begin: Get like counts */
                            $.ajax({
                                url: '/Listing/LikeCount',
                                type: 'POST',
                                dataType: 'json',
                                data: {
                                    ListingID: ListingIDValue,
                                },
                                success: function (data) {
                                    $("#LikeCount").html(data);
                                }
                            });
                            /* End: */
                        }
                    });
                });
                /* End: */

                /* Begin: Manage Bookmark */
                $("#BookmarkMe").click(function () {
                    /* Begin: Get parameters value from hidden input */
                    var ListingIDValue = $("#ListingIdValue").val();
                    var BookmarkValue = $("#BookmarkValue").val();
                    /* End: */
                    $.ajax({
                        url: '/Listing/Bookmark',
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            ListingID: ListingIDValue,
                            Bookmark: BookmarkValue
                        },
                        success: function (data) {
                            $("#BookmarkValue").val(data);

                            /* Begin: Set Class Name Document Load */
                            if (data == "Remove-Bookmark") {
                                $("#BookmarkMe i").removeClass("icon-bookmark-empty").addClass("icon-bookmark");
                                $("#BookmarkMe i").css("color", "#0094ff;");
                            }
                            if (data == "Bookmark") {
                                $("#BookmarkMe i").removeClass("icon-bookmark").addClass("icon-bookmark-empty");
                            }
                            /* End: */

                            /* Begin: Get bookmark counts */
                            $.ajax({
                                url: '/Listing/BookmarkCount',
                                type: 'POST',
                                dataType: 'json',
                                data: {
                                    ListingID: ListingIDValue,
                                },
                                success: function (data) {
                                    $("#BookmarkCount").html(data);
                                }
                            });
                            /* End: */
                        }
                    });
                });
                /* End: */

                /* Begin: Manage Subscribe */

                $("#SubscribeMe").click(function () {
                    /* Begin: Get parameters value from hidden input */
                    var ListingIDValue = $("#ListingIdValue").val();
                    var SubscribeValue = $("#SubscribeValue").val();
                    /* End: */
                    $.ajax({
                        url: '/Listing/Subscribe',
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            ListingID: ListingIDValue,
                            Subscribe: SubscribeValue
                        },
                        success: function (data) {
                            $("#SubscribeValue").val(data);

                            /* Begin: Set Class Name Document Load */
                            if (data == "Unsubscribe") {
                                $("#SubscribeMe i").removeClass("icon-bell").addClass("icon-bell-alt");
                                $("#SubscribeMe i").css("color", "#0094ff;");
                            }
                            if (data == "Subscribe") {
                                $("#SubscribeMe i").removeClass("icon-bell-alt").addClass("icon-bell");
                            }
                            /* End: */

                            /* Begin: Get bookmark counts */
                            $.ajax({
                                url: '/Listing/SubscribeCount',
                                type: 'POST',
                                dataType: 'json',
                                data: {
                                    ListingID: ListingIDValue,
                                },
                                success: function (data) {
                                    $("#SubscribeCount").html(data);
                                }
                            });
                            /* End: */
                        }
                    });
                });
            });
            /* End: */
        </script>
    }
    <!-- End: -->
}

<link href="~/css/MIMStarRatingReviews.css" rel="stylesheet">
<link href="~/css/MIMListingDetails.css" rel="stylesheet">

<aside class="col-lg-3" id="sidebar">
    <div class="mim-Box" style="margin-top:-5px; text-align:center;">
        @{
            string ProfileImage = ViewBag.ProfileID + ".jpg";
            var path = System.IO.Path.Combine(hostingEnv.WebRootPath, "img", ProfileImage);
        }
        @if (System.IO.File.Exists(path))
        {
            <img src="~/FileManager/ProfileImages/@ProfileImage" class="rounded-circle img-thumbnail" width="125" />
        }
        else
        {
            <img src="~/img/thumbnail-profile.png" class="rounded-circle img-thumbnail" width="125" />
        }
        <p style="margin-top:10px;">
            <strong>@ViewBag.Name</strong>
            <br />
            @ViewBag.Designation
        </p>
    </div>
    <div class="mim-Box mim-SideBoxList" style="margin-top:-10px;">
        <h6>SPECIALISATION</h6>
        <ul>
            @if (Model.Specialisation.Banks == true)
            {
                <li><i class="icon-check-1"></i> Bank</li>
            }
            @if (Model.Specialisation.ExhibitionStall == true)
            {
                <li><i class="icon-check-1"></i> Exhibition Stall</li>
            }
            @if (Model.Specialisation.Hotel == true)
            {
                <li><i class="icon-check-1"></i> Hotel</li>
            }
            @if (Model.Specialisation.Restaurants == true)
            {
                <li><i class="icon-check-1"></i> Restaurants</li>
            }
            @if (Model.Specialisation.BeautyParlors == true)
            {
                <li><i class="icon-check-1"></i> Beauty Parlors</li>
            }
            @if (Model.Specialisation.Factory == true)
            {
                <li><i class="icon-check-1"></i> Factory</li>
            }
            @if (Model.Specialisation.Laboratory == true)
            {
                <li><i class="icon-check-1"></i> Laboratory</li>
            }
            @if (Model.Specialisation.Salons == true)
            {
                <li><i class="icon-check-1"></i> Salons</li>
            }
            @if (Model.Specialisation.Bungalow == true)
            {
                <li><i class="icon-check-1"></i> Bungalow</li>
            }
            @if (Model.Specialisation.Farmhouse == true)
            {
                <li><i class="icon-check-1"></i> Farmhouse</li>
            }
            @if (Model.Specialisation.Mandir == true)
            {
                <li><i class="icon-check-1"></i> Mandir</li>
            }
            @if (Model.Specialisation.Shop == true)
            {
                <li><i class="icon-check-1"></i> Shop</li>
            }
            @if (Model.Specialisation.CallCenter == true)
            {
                <li><i class="icon-check-1"></i> Call Center</li>
            }
            @if (Model.Specialisation.Gurudwara == true)
            {
                <li><i class="icon-check-1"></i> Gurudwara</li>
            }
            @if (Model.Specialisation.Mosque == true)
            {
                <li><i class="icon-check-1"></i> Mosque</li>
            }
            @if (Model.Specialisation.ShoppingMall == true)
            {
                <li><i class="icon-check-1"></i> Shopping Mall</li>
            }
            @if (Model.Specialisation.Church == true)
            {
                <li><i class="icon-check-1"></i> Church</li>
            }
            @if (Model.Specialisation.Gym == true)
            {
                <li><i class="icon-check-1"></i> Gym</li>
            }
            @if (Model.Specialisation.Office == true)
            {
                <li><i class="icon-check-1"></i> Office</li>
            }
            @if (Model.Specialisation.Showroom == true)
            {
                <li><i class="icon-check-1"></i> Showroom</li>
            }
            @if (Model.Specialisation.Company == true)
            {
                <li><i class="icon-check-1"></i> Company</li>
            }
            @if (Model.Specialisation.HealthClub == true)
            {
                <li><i class="icon-check-1"></i> Health Club</li>
            }
            @if (Model.Specialisation.Plazas == true)
            {
                <li><i class="icon-check-1"></i> Plazas</li>
            }
            @if (Model.Specialisation.Warehouse == true)
            {
                <li><i class="icon-check-1"></i> Warehouse</li>
            }
            @if (Model.Specialisation.ComputerInstitute == true)
            {
                <li><i class="icon-check-1"></i> Computer Institute</li>
            }
            @if (Model.Specialisation.Home == true)
            {
                <li><i class="icon-check-1"></i> Home</li>
            }
            @if (Model.Specialisation.ResidentialSociety == true)
            {
                <li><i class="icon-check-1"></i> Residential Society</li>
            }
            @if (Model.Specialisation.Dispensary == true)
            {
                <li><i class="icon-check-1"></i> Dispensary</li>
            }
            @if (Model.Specialisation.Hospital == true)
            {
                <li><i class="icon-check-1"></i> Hospital</li>
            }
            @if (Model.Specialisation.Resorts == true)
            {
                <li><i class="icon-check-1"></i> Resorts</li>
            }
        </ul>
    </div>
    <div class="mim-Box mim-SideBoxList" style="margin-top:-10px;">
        <h6>PAYMENT DETAILS</h6>
        <ul>
            @if (Model.PaymentMode.Cash == true)
            {
                <li><i class="icon-check-1"></i> Cash</li>
            }
            @if (Model.PaymentMode.NetBanking == true)
            {
                <li><i class="icon-check-1"></i> Net Banking</li>
            }
            @if (Model.PaymentMode.Cheque == true)
            {
                <li><i class="icon-check-1"></i> Cheque</li>
            }
            @if (Model.PaymentMode.RtgsNeft == true)
            {
                <li><i class="icon-check-1"></i> RTGS & NEFT</li>
            }
            @if (Model.PaymentMode.DebitCard == true)
            {
                <li><i class="icon-check-1"></i> Debit Card</li>
            }
            @if (Model.PaymentMode.CreditCard == true)
            {
                <li><i class="icon-check-1"></i> Credit Card</li>
            }
            @if (Model.PaymentMode.PayTM == true)
            {
                <li><i class="icon-check-1"></i> Pay TM</li>
            }
            @if (Model.PaymentMode.PhonePay == true)
            {
                <li><i class="icon-check-1"></i> Phone Pay</li>
            }
            @if (Model.PaymentMode.Paypal == true)
            {
                <li><i class="icon-check-1"></i> Paypal</li>
            }
        </ul>
    </div>
</aside>
<div class="col-lg-9">
    <div class="strip list_view" style="box-shadow:none; padding:5px;">
        <div class="row no-gutters">
            <div class="col-md-5" style="padding:10px;">
                <div class="gmap_canvas">
                    <iframe width="600" height="300" id="gmap_canvas" src="https://maps.google.com/maps?q=@ViewBag.Company&t=&z=13&ie=UTF8&iwloc=&output=embed" frameborder="0" scrolling="no" marginheight="0" marginwidth="0"></iframe>
                </div>
            </div>
            <div class="col-md-7" style="padding:10px;">
                <div><span class="mim-CompanyName">@Model.Listing.CompanyName</span><a href="#0" class="mim-ClaimBusiness"><i class="icon-pencil-1"></i>write a preview</a></div>
                <span class="mim-CategoryName">@secondCategory.Name</span>
                <span class="MIM-Stars" style="--rating: @ViewBag.RatingAverage;" aria-label="Rating of this product is @ViewBag.RatingAverage out of 5"></span>
                @ViewBag.RatingAverage based on @ratingCount rating
                <div class="col-lg-12 mim-TopBorderSeparator">
                    <p class="mim-Address">
                        <i class="icon-location-6 mim-marginLeft-Minus20"></i> @Model.Address.LocalAddress, @locality.LocalityName, @pincode.PincodeNumber, @state.Name, @country.Name <a href="#0">more...</a>
                        <br />
                        <i class="icon-address mim-marginLeft-Minus20"></i> @assembly.Name <span style="margin-left:30px;"><i class="icon-map-1"></i>@city.Name</span>
                    </p>
                </div>
                <div class="col-lg-12">
                    <div class="row">
                        <div class="col-lg-6">
                            <i class="icon-globe-4 mim-marginLeft-Minus20"></i>
                            <a href="@Model.Communication.Website" target="_blank" title="@Model.Communication.Website">
                                @{
                                    bool https = Regex.IsMatch(Model.Communication.Website, @"\bhttps\b");
                                    bool http = Regex.IsMatch(Model.Communication.Website, @"\bhttp\b");
                                }
                                @if (http == true)
                                {
                                    @Model.Communication.Website.Replace("http://", "");
                                }
                                @if (https == true)
                                {
                                    @Model.Communication.Website.Replace("https://", "");
                                }
                            </a>
                        </div>
                        <div class="col-lg-6">
                            <div class="col-lg-12">
                                <i class="icon-calendar-5 mim-marginLeft-Minus20"></i> Year of Establishment @Model.Listing.YearOfEstablishment.ToString("yyyy")
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12" id="ShortWorkingHoursShow">
                        <div class="row">
                            <p style="margin-top:8px;">
                                <i class="icon-map-1 mim-marginLeft-Minus20"></i><span style="font-weight:bold;">Hours: </span>
                                @if (ViewBag.OpenClose == "Closed")
                                {
                                    <span style="font-weight:bold; color:#ff0000;">Closed</span>
                                    <span>Opens: @ViewBag.FromTime</span>
                                    <span style="font-weight:bold;">@ViewBag.OpenOn</span>
                                    <i class="icon-down-open-1"></i>
                                }

                                @if (ViewBag.OpenClose == "Open Now")
                                {
                                    <span style="font-weight:bold; color:#007e25;">Open Now</span>
                                    <span style="font-weight:bold;">Closes @ViewBag.ToTime</span>
                                    <i class="icon-down-open-1"></i>
                                }
                            </p>
                        </div>
                    </div>
                    <div class="col-lg-12" id="ShortWorkingHoursHide">
                        <div class="row">
                            <p style="margin-top:8px;">
                                <i class="icon-map-1 mim-marginLeft-Minus20"></i><span style="font-weight:bold;">Hours: </span>
                                @if (ViewBag.OpenClose == "Closed")
                                {
                                    <span style="font-weight:bold; color:#ff0000;">Closed</span>
                                    <span>Opens: @ViewBag.FromTime</span>
                                    <span style="font-weight:bold;">@ViewBag.OpenOn</span>
                                    <i class="icon-up-open-1"></i>
                                }

                                @if (ViewBag.OpenClose == "Open Now")
                                {
                                    <span style="font-weight:bold; color:#007e25;">Open Now</span>
                                    <span style="font-weight:bold;">Closes @ViewBag.ToTime</span>
                                    <i class="icon-up-open-1"></i>
                                }
                            </p>
                        </div>
                    </div>
                    <div class="col-lg-12" style="margin-bottom:30px; margin-top:-20px;" id="FulltWorkingHours">
                        <div class="row" id="FullTime" style="margin-left:-45px;">
                            <div class="col-lg-12">
                                <div class="row">
                                    <div class="col-lg-4">Monday</div>
                                    <div class="col-lg-8">@Model.WorkingHours.MondayFrom.ToString("hh:mm tt") to @Model.WorkingHours.MondayTo.ToString("hh:mm tt")</div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="row">
                                    <div class="col-lg-4">Tuesday</div>
                                    <div class="col-lg-8">@Model.WorkingHours.TuesdayFrom.ToString("hh:mm tt") to @Model.WorkingHours.TuesdayTo.ToString("hh:mm tt")</div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="row">
                                    <div class="col-lg-4">Wednesday></div>
                                    <div class="col-lg-8">@Model.WorkingHours.WednesdayFrom.ToString("hh:mm tt") to @Model.WorkingHours.WednesdayTo.ToString("hh:mm tt")</div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="row">
                                    <div class="col-lg-4">Friday</div>
                                    <div class="col-lg-8">@Model.WorkingHours.FridayFrom.ToString("hh:mm tt") to @Model.WorkingHours.FridayTo.ToString("hh:mm tt")</div>
                                </div>
                            </div>
                            @if (Model.WorkingHours.SaturdayHoliday != true)
                            {
                                <div class="col-lg-12">
                                    <div class="row">
                                        <div class="col-lg-4">Saturday</div>
                                        <div class="col-lg-8">@Model.WorkingHours.SaturdayFrom.ToString("hh:mm tt") to @Model.WorkingHours.SaturdayTo.ToString("hh:mm tt")</div>
                                    </div>
                                </div>
                            }
                            @if (Model.WorkingHours.SaturdayHoliday == true)
                            {
                                <div class="col-lg-12">
                                    <div class="row">
                                        <div class="col-lg-4">Saturday</div>
                                        <div class="col-lg-8"><span style="font-weight:bold; color:#ff0000;">Holiday</span></div>
                                    </div>
                                </div>
                            }
                            @if (Model.WorkingHours.SundayHoliday != true)
                            {
                                <div class="col-lg-12">
                                    <div class="row">
                                        <div class="col-lg-4">Sunday</div>
                                        <div class="col-lg-8">@Model.WorkingHours.SundayFrom.ToString("hh:mm tt") to @Model.WorkingHours.SundayTo.ToString("hh:mm tt")</div>
                                    </div>
                                </div>
                            }
                            @if (Model.WorkingHours.SundayHoliday == true)
                            {
                                <div class="col-lg-12">
                                    <div class="row">
                                        <div class="col-lg-4">Sunday</div>
                                        <div class="col-lg-8"><span style="font-weight:bold; color:#ff0000;">Holiday</span></div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="row" style="margin-top:-20px;">
                        <div class="col-lg-3">
                            <a href="#0" class="btn btn-success btn-sm mim-marginLeft-Minus20 mim-MarginTop-20 content-desktop" style="width:150px;" id="ViewNumber"><i class="icon-eye"></i> Show Contact</a>
                            <a href="#0" class="btn btn-danger btn-sm mim-marginLeft-Minus20 mim-MarginTop-20 content-desktop" style="width:150px;" id="HideNumber"><i class="icon-eye-off"></i> Hide Contact</a>
                            <a href="#0" class="btn btn-success mim-marginLeft-Minus20 mim-MarginTop-20 content-mobile">Click To Call</a>
                        </div>
                        <div class="col-lg-9">
                            <div class="col-lg-12 mim-FollowAndLike">
                                @*<a href="#0" class="mim-marginLeft-Minus20 btn btn-light btn-sm"><i class="icon-share"></i> Share</a>*@<a href="#0" class="mim-marginLeft-Minus20 btn btn-light btn-sm"><i class="icon-share"></i></a>
                                <!-- Begin: Hidden values -->
                                <input type="hidden" value="@ViewBag.LikeDislike" id="LikeValue" name="Like" />
                                <input type="hidden" value="@ViewBag.Bookmark" id="BookmarkValue" name="Bookmark" />
                                <input type="hidden" value="@ViewBag.Subscribe" id="SubscribeValue" name="Subscribe" />
                                <input type="hidden" value="@Model.Listing.ListingID" id="ListingIdValue" name="ListingID" />
                                <!-- End: -->
                                <!-- Begin: Bookmark Remove-Bookmark using ajax-->
                                @if (ViewBag.Bookmark == "Bookmark")
                                {
                                    <a href="#0" id="BookmarkMe" class="pushRight btn btn-light btn-sm"><i class="icon-bookmark-empty"></i> Bookmark <span id="BookmarkCount">@ViewBag.BookmarkCounts</span></a>
                                }
                                else
                                {
                                    <a href="#0" id="BookmarkMe" class="pushRight btn btn-light btn-sm"><i class="icon-bookmark" style="color:#0094ff;"></i> Bookmark <span id="BookmarkCount">@ViewBag.LikesCounts</span></a>
                                }
                                <!-- End: -->
                                <!-- Begin: Like unlike using ajax-->
                                @if (ViewBag.LikeDislike == "Like")
                                {
                                    <a href="#0" id="LikeMe" class="pushRight btn btn-light btn-sm"><i class="icon-thumbs-up"></i> <span id="LikeCount">@ViewBag.LikesCounts</span></a>
                                }
                                else
                                {
                                    <a href="#0" id="LikeMe" class="pushRight btn btn-light btn-sm"><i class="icon-thumbs-up-alt" style="color:#0094ff;"></i> <span id="LikeCount">@ViewBag.LikesCounts</span></a>
                                }
                                <!-- End: -->
                                <!-- Begin: Subscribe & Unsubscribe using ajax-->
                                @if (ViewBag.Subscribe == "Subscribe")
                                {
                                    <a href="#0" id="SubscribeMe" class="pushRight btn btn-light btn-sm"><i class="icon-bell"></i> Subscribe <span id="SubscribeCount">@ViewBag.SubscribeCounts</span></a>
                                }
                                else
                                {
                                    <a href="#0" id="SubscribeMe" class="pushRight btn btn-light btn-sm"><i class="icon-bell-alt" style="color:#0094ff;"></i> Subscribe <span id="SubscribeCount">@ViewBag.SubscribeCounts</span></a>
                                }
                                <!-- End: -->
                            </div>
                        </div>
                    </div>
                    <div class="row mim-MarginTop-20" id="contactDetails">
                        @if (Model.Communication.Mobile != null)
                        {
                            <div class="col-lg-4">
                                <i class="icon-mobile-6 mim-marginLeft-Minus20"></i> <a href="tel:@Model.Communication.Mobile" title="Call Now">@Model.Communication.Mobile</a>
                            </div>
                        }
                        @if (Model.Communication.Whatsapp != null)
                        {
                            <div class="col-lg-4">
                                <i class="icon-mobile-6 mim-marginLeft-Minus20"></i> <a href="tel:@Model.Communication.Whatsapp" title="Whatsapp">@Model.Communication.Whatsapp</a>
                            </div>
                        }
                        @if (Model.Communication.Telephone != null)
                        {
                            <div class="col-lg-4">
                                <i class="icon-phone mim-marginLeft-Minus20"></i> <a href="tel:@Model.Communication.Telephone" title="Telephone">@Model.Communication.Telephone</a>
                            </div>
                        }
                        @if (Model.Communication.TelephoneSecond != null)
                        {
                            <div class="col-lg-4">
                                <i class="icon-phone mim-marginLeft-Minus20"></i> <a href="tel:@Model.Communication.TelephoneSecond" title="Telephone">@Model.Communication.TelephoneSecond</a>
                            </div>
                        }

                        @if (Model.Communication.TollFree != null)
                        {
                            <div class="col-lg-4">
                                <i class="icon-headphones-3 mim-marginLeft-Minus20"></i> <a href="tel:@Model.Communication.TollFree" title="Toll Free">@Model.Communication.TollFree</a>
                            </div>
                        }

                        @if (Model.Communication.Fax != null)
                        {
                            <div class="col-lg-4">
                                <i class="icon-print mim-marginLeft-Minus20"></i> <a href="tel:@Model.Communication.Fax" title="Fax">@Model.Communication.Fax</a>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-lg-12 mim-TopBorderSeparator mim-SocialShare">
                    @if (Model.Specialisation.AcceptTenderWork == true)
                    {
                        <div class="col-lg-12" id="ShortWorkingHoursShow" style="margin-top:-15px; margin-bottom:-30px;">
                            <div class="row">
                                <p style="margin-top:8px;">
                                    <i class="icon-check-1 mim-marginLeft-Minus20" style="color:#007e25;"></i><span style="font-weight:bold;">We Accept:</span> Tender Projects
                                </p>
                            </div>
                        </div>
                    }
                    <a href="#0" class="mim-marginLeft-Minus20"><i class="icon-facebook-squared-1"></i></a>
                    <a href="#0" class="pushRight"><i class="fa fa-whatsapp"></i></a>
                    <a href="#0" class="pushRight"><i class="icon-linkedin-3"></i></a>
                    <a href="#0" class="pushRight"><i class="icon-twitter-rect"></i></a>
                    <a href="#0" class="pushRight"><i class="icon-youtube-play"></i></a>
                    <a href="#0" class="pushRight"><i class="icon-instagramm"></i></a>
                    <a href="#0" class="pushRight"><i class="icon-pinterest-squared"></i></a>
                </div>
            </div>
        </div>
        <div style="text-align:center; margin-bottom:30px; margin-top:60px;">
            <img src="~/img/placeholder-banner-690-x-120.jpg" style="height:80px;" />
        </div>
        <!-- Shafi Delete This:  -->
        @if (User.Identity.IsAuthenticated && listingAlreadyClaim == false)
        {
            <form action="/Claims/Listing/Index" method="post">
                <input type="hidden" name="ListingId" value="@Model.Listing.ListingID" />
                <input type="submit" class="btn btn-sm btn-primary" value="Claim This Listing" />
            </form>
        }
        <!-- End: -->
        <!-- Begin: Invoke Write Review Component  -->
        @if (User.Identity.IsAuthenticated && await listingRepository.ReviewExistsAsync(Model.Listing.ListingID, ViewBag.UserGuid) == false)
        {
            <div class="col-lg-12" id="Review">
                <div class="row">
                    <div class="col-lg-12">
                        @await Component.InvokeAsync("Rating")
                    </div>
                </div>
            </div>
            <div class="col-lg-12" id="ReviewSuccess">
                <div class="row">
                    <div class="col-lg-12">
                        <span class="alert alert-success btn-block" role="alert" id="ReviewSuccessMessage">
                        </span>
                    </div>
                </div>
                <hr />
            </div>
        }
        else
        {
            <div class="col-lg-12" id="Review">
                <div class="row">
                    <div class="col-lg-12">
                        @await Component.InvokeAsync("Rating")
                    </div>
                </div>
                <hr />
            </div>
            <div class="col-lg-12" id="ReviewSuccess">
                <div class="row">
                    <div class="col-lg-12">
                        <span class="alert alert-success btn-block" role="alert" id="ReviewSuccessMessage">
                        </span>
                    </div>
                </div>
            </div>
        }
        <!-- End: Review -->
        <!-- Begin: Edit Review -->
        @if (ViewBag.CurrentUserRatingID != null && User.Identity.IsAuthenticated == true)
        {
            <div class="col-lg-12" id="EditReview">
                <div class="row">
                    <div class="col-lg-12">
                        @await Component.InvokeAsync("RatingEdit", ViewBag.CurrentUserRatingID)
                    </div>
                </div>
            </div>
            <div class="col-lg-12" id="EditReviewSuccess">
                <div class="row">
                    <div class="col-lg-12">
                        <span class="alert alert-success btn-block" role="alert" id="EditReviewSuccessMessage">
                        </span>
                    </div>
                </div>
                <hr />
            </div>
        }
        <!-- End: -->
        <div class="row no-gutters" style="padding:10px;">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-lg-2" style="margin-top:-30px;">
                        @if (User.Identity.IsAuthenticated && await listingRepository.ReviewExistsAsync(Model.Listing.ListingID, ViewBag.UserGuid) == true)
                        {
                            <a href="#0" id="EditReviewButton"><i class="icon-pencil"></i> Edit Review</a>
                        }
                        else
                        {
                            <a href="#0" id="WriteReview"><i class="icon-pencil"></i> Write Review</a>
                        }
                    </div>
                    <div class="col-lg-2" style="margin-top:-30px;">
                        <a href="#0" id="EditReviewButtonTwo"><i class="icon-pencil"></i> Edit Review</a>
                    </div>
                </div>

                <div class="row">
                    <!-- Begin: Add rating bar by calling Viewcomponet through ajax -->
                    <div class="col-md-5 mim-ReviewLeftBox" id="RatingBar">
                    </div>
                    <!-- End: -->
                    <div class="col-md-7" id="ReviewByUserOnTop">
                    </div>
                </div>
            </div>
            <div id="GetReviewsAndRatings">
            </div>
        </div>
    </div>
</div>
